#!/usr/bin/env bash
Got=$(git rev-parse --show-toplevel)

_c0="\033[00m"     # white
_c1="\033[01;32m"  # green
_c2="\033[01;34m"  # blue
_c3="\033[31m"     # red
_c5="\033[35m"     # purple
_c6="\033[33m"     # yellow
_c7="\033[36m"     # turquoise

here() { cd $1; basename "$PWD"; }

PROMPT_COMMAND='echo -ne "${_c2}GOT:${_c0}${_c0}$(hostname -s):${_c6}$(git branch 2>/dev/null | grep '^*' | colrm 1 2) \033]0;$(here ..)/$(here .)\007";PS1="${_c1}$_c2$(here ..)/$_c3$(here .) ${_c6}\!>${_c0}\e[m "'

blank() {
cat<<EOF
; vim: ts=2 sw=2 sts=2  et
(unless (fboundp 'got) (load "../got"))

(got "lib/")

EOF
}

gfig() {
  git config --global credential.helper cache
  git config credential.helper 'cache --timeout=3600'
}

alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias get='git pull'
alias grep='grep --color=auto'
alias ls='ls -G'
alias put='git commit -am saving; git push; git status'
alias vi="vim -u $Got/etc/dotvimrc "
alias sbcl="$(which sbcl) --script "

pathadd() {
      if  [[ ":$PATH:" != *":$1:"* ]]; then
          export PATH="${PATH:+"$PATH:"}$1"
      fi
}
pathadd /usr/local/bin
Dirs=$(find $Got/src -type d  -depth 1 | grep -v \.git\/ | grep -v data )

readmes() {
  for d in $Dirs; do
    (cd $d
     echo $d
     clisp ../lib/readme.lisp "$(basename $d)" > README.md
     git add README.md)
  done
}

alias got=". $Got/etc/dotbashrc"
echo ";;;; (got (lisp '?)) ; v2.0 (c) 2019 Tim Menzies, http://git.io/gotlisp"
